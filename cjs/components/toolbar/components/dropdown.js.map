{"version":3,"sources":["../../../../src/components/toolbar/components/dropdown.js"],"names":["ToolbarDropdown","className","boxed","right","children","props","defaultProps","renderAs"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAqD;AAAA,MAAlDC,SAAkD,QAAlDA,SAAkD;AAAA,MAAvCC,KAAuC,QAAvCA,KAAuC;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC3E,sBACE,gCAAC,mBAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAE,4BAAW,kBAAX,EAA+BJ,SAA/B,EAA0C;AACnD,kBAAYC,KADuC;AAEnD,kBAAYC;AAFuC,KAA1C;AAFb,MAOGC,QAPH,CADF;AAWD,CAZD;;AA+BAJ,eAAe,CAACM,YAAhB,GAA+B;AAC7BC,EAAAA,QAAQ,EAAE;AADmB,CAA/B;eAIeP,e","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Element from '../../element';\n\nconst ToolbarDropdown = ({ className, boxed, right, children, ...props }) => {\n  return (\n    <Element\n      {...props}\n      className={classnames('toolbar-dropdown', className, {\n        'is-boxed': boxed,\n        'is-right': right,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nToolbarDropdown.propTypes = {\n  boxed: PropTypes.bool,\n  /**\n   * If your parent `Toolbar.Container` is on the right side, you can align the dropdown to start from the right setting this to true.\n   */\n  right: PropTypes.bool,\n  /**\n   * Open the dropdown upward instead of downward (default behaviour)\n   */\n  up: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nToolbarDropdown.defaultProps = {\n  renderAs: 'span',\n};\n\nexport default ToolbarDropdown;\n"],"file":"dropdown.js"}